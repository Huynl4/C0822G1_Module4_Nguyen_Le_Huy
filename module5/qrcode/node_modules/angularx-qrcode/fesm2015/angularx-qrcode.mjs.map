{"version":3,"file":"angularx-qrcode.mjs","sources":["../../../projects/angularx-qrcode/src/lib/angularx-qrcode.component.ts","../../../projects/angularx-qrcode/src/lib/angularx-qrcode.module.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  Renderer2,\n  ViewChild,\n} from \"@angular/core\"\nimport { DomSanitizer, SafeUrl } from \"@angular/platform-browser\"\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\nimport * as QRCode from \"@cordobo/qrcode\"\nimport {\n  QRCodeErrorCorrectionLevel,\n  QRCodeVersion,\n  QRCodeElementType,\n  QRCodeConfigType,\n} from \"./types\"\n\n@Component({\n  selector: \"qrcode\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n})\nexport class QRCodeComponent implements OnChanges {\n  @Input() public allowEmptyString = false\n  @Input() public colorDark = \"#000000ff\"\n  @Input() public colorLight = \"#ffffffff\"\n  @Input() public cssClass = \"qrcode\"\n  @Input() public elementType: QRCodeElementType = \"canvas\"\n  @Input()\n  public errorCorrectionLevel: QRCodeErrorCorrectionLevel = \"M\"\n  @Input() public imageSrc?: string\n  @Input() public imageHeight?: number\n  @Input() public imageWidth?: number\n  @Input() public margin = 4\n  @Input() public qrdata = \"\"\n  @Input() public scale = 4\n  @Input() public version?: QRCodeVersion\n  @Input() public width = 10\n\n  // Accessibility features introduced in 13.0.4+\n  @Input() public alt?: string\n  @Input() public ariaLabel?: string\n  @Input() public title?: string\n\n  @Output() qrCodeURL = new EventEmitter<SafeUrl>()\n\n  @ViewChild(\"qrcElement\", { static: true }) public qrcElement!: ElementRef\n\n  public context: CanvasRenderingContext2D | null = null\n  private centerImage?: HTMLImageElement\n\n  constructor(private renderer: Renderer2, private sanitizer: DomSanitizer) {}\n\n  public async ngOnChanges(): Promise<void> {\n    await this.createQRCode()\n  }\n\n  protected isValidQrCodeText(data: string | null): boolean {\n    if (this.allowEmptyString === false) {\n      return !(\n        typeof data === \"undefined\" ||\n        data === \"\" ||\n        data === \"null\" ||\n        data === null\n      )\n    }\n    return !(typeof data === \"undefined\")\n  }\n\n  private toDataURL(qrCodeConfig: QRCodeConfigType): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toDataURL(\n          this.qrdata,\n          qrCodeConfig,\n          (err: Error, url: string) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(url)\n            }\n          }\n        )\n      }\n    )\n  }\n\n  private toCanvas(\n    canvas: Element,\n    qrCodeConfig: QRCodeConfigType\n  ): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toCanvas(canvas, this.qrdata, qrCodeConfig, (error: Error) => {\n          if (error) {\n            reject(error)\n          } else {\n            resolve(\"success\")\n          }\n        })\n      }\n    )\n  }\n\n  private toSVG(qrCodeConfig: QRCodeConfigType): Promise<any> {\n    return new Promise(\n      (resolve: (arg: any) => any, reject: (arg: any) => any) => {\n        QRCode.toString(\n          this.qrdata,\n          qrCodeConfig,\n          (err: Error, url: string) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(url)\n            }\n          }\n        )\n      }\n    )\n  }\n\n  private renderElement(element: Element): void {\n    for (const node of this.qrcElement.nativeElement.childNodes) {\n      this.renderer.removeChild(this.qrcElement.nativeElement, node)\n    }\n    this.renderer.appendChild(this.qrcElement.nativeElement, element)\n  }\n\n  private async createQRCode(): Promise<void> {\n    // Set sensitive defaults\n    if (this.version && this.version > 40) {\n      console.warn(\"[angularx-qrcode] max value for `version` is 40\")\n      this.version = 40\n    } else if (this.version && this.version < 1) {\n      console.warn(\"[angularx-qrcode]`min value for `version` is 1\")\n      this.version = 1\n    } else if (this.version !== undefined && isNaN(this.version)) {\n      console.warn(\n        \"[angularx-qrcode] version should be a number, defaulting to auto.\"\n      )\n      this.version = undefined\n    }\n\n    try {\n      if (!this.isValidQrCodeText(this.qrdata)) {\n        throw new Error(\n          \"[angularx-qrcode] Field `qrdata` is empty, set 'allowEmptyString=\\\"true\\\"' to overwrite this behaviour.\"\n        )\n      }\n\n      // This is a workaround to allow an empty string as qrdata\n      if (this.isValidQrCodeText(this.qrdata) && this.qrdata === \"\") {\n        this.qrdata = \" \"\n      }\n\n      const config: QRCodeConfigType = {\n        color: {\n          dark: this.colorDark,\n          light: this.colorLight,\n        },\n        errorCorrectionLevel: this.errorCorrectionLevel,\n        margin: this.margin,\n        scale: this.scale,\n        type: this.elementType,\n        version: this.version,\n        width: this.width,\n      }\n\n      const centerImageSrc = this.imageSrc\n      const centerImageHeight = this.imageHeight || 40\n      const centerImageWidth = this.imageWidth || 40\n\n      switch (this.elementType) {\n        case \"canvas\":\n          const canvasElement: HTMLCanvasElement =\n            this.renderer.createElement(\"canvas\")\n          this.context = canvasElement.getContext(\"2d\")\n          this.toCanvas(canvasElement, config)\n            .then(() => {\n              if (this.ariaLabel) {\n                this.renderer.setAttribute(\n                  canvasElement,\n                  \"aria-label\",\n                  `${this.ariaLabel}`\n                )\n              }\n              if (this.title) {\n                this.renderer.setAttribute(\n                  canvasElement,\n                  \"title\",\n                  `${this.title}`\n                )\n              }\n\n              if (centerImageSrc && this.context) {\n                this.centerImage = new Image(\n                  centerImageWidth,\n                  centerImageHeight\n                )\n\n                if (centerImageSrc !== this.centerImage.src) {\n                  this.centerImage.src = centerImageSrc\n                }\n\n                if (centerImageHeight !== this.centerImage.height) {\n                  this.centerImage.height = centerImageHeight\n                }\n\n                if (centerImageWidth !== this.centerImage.width) {\n                  this.centerImage.width = centerImageWidth\n                }\n\n                const centerImage = this.centerImage\n\n                if (centerImage) {\n                  centerImage.onload = () => {\n                    this.context?.drawImage(\n                      centerImage,\n                      canvasElement.width / 2 - centerImageWidth / 2,\n                      canvasElement.height / 2 - centerImageHeight / 2,\n                      centerImageWidth,\n                      centerImageHeight\n                    )\n                  }\n                }\n              }\n\n              this.renderElement(canvasElement)\n              this.emitQRCodeURL(canvasElement as HTMLCanvasElement)\n            })\n            .catch((e) => {\n              console.error(\"[angularx-qrcode] canvas error:\", e)\n            })\n          break\n        case \"svg\":\n          const svgParentElement: HTMLElement =\n            this.renderer.createElement(\"div\")\n          this.toSVG(config)\n            .then((svgString: string) => {\n              this.renderer.setProperty(\n                svgParentElement,\n                \"innerHTML\",\n                svgString\n              )\n              const svgElement = svgParentElement.firstChild as SVGSVGElement\n              this.renderer.setAttribute(svgElement, \"height\", `${this.width}`)\n              this.renderer.setAttribute(svgElement, \"width\", `${this.width}`)\n              this.renderElement(svgElement)\n              this.emitQRCodeURL(svgElement)\n            })\n            .catch((e) => {\n              console.error(\"[angularx-qrcode] svg error:\", e)\n            })\n          break\n        case \"url\":\n        case \"img\":\n        default:\n          const imgElement: HTMLImageElement =\n            this.renderer.createElement(\"img\")\n          this.toDataURL(config)\n            .then((dataUrl: string) => {\n              if (this.alt) {\n                imgElement.setAttribute(\"alt\", this.alt)\n              }\n              if (this.ariaLabel) {\n                imgElement.setAttribute(\"aria-label\", this.ariaLabel)\n              }\n              imgElement.setAttribute(\"src\", dataUrl)\n              if (this.title) {\n                imgElement.setAttribute(\"title\", this.title)\n              }\n              this.renderElement(imgElement)\n              this.emitQRCodeURL(imgElement)\n            })\n            .catch((e) => {\n              console.error(\"[angularx-qrcode] img/url error:\", e)\n            })\n      }\n    } catch (e: any) {\n      console.error(\"[angularx-qrcode] Error generating QR Code:\", e.message)\n    }\n  }\n\n  emitQRCodeURL(element: HTMLCanvasElement | HTMLImageElement | SVGSVGElement) {\n    const className = element.constructor.name\n    if (className === SVGSVGElement.name) {\n      const svgHTML = element.outerHTML\n      const blob = new Blob([svgHTML], { type: \"image/svg+xml\" })\n      const urlSvg = URL.createObjectURL(blob)\n      const urlSanitized = this.sanitizer.bypassSecurityTrustUrl(urlSvg)\n      this.qrCodeURL.emit(urlSanitized)\n      return\n    }\n\n    let urlImage = \"\"\n\n    if (className === HTMLCanvasElement.name) {\n      urlImage = (element as HTMLCanvasElement).toDataURL(\"image/png\")\n    }\n\n    if (className === HTMLImageElement.name) {\n      urlImage = (element as HTMLImageElement).src\n    }\n\n    fetch(urlImage)\n      .then((urlResponse: Response) => urlResponse.blob())\n      .then((blob: Blob) => URL.createObjectURL(blob))\n      .then((url: string) => this.sanitizer.bypassSecurityTrustUrl(url))\n      .then((urlSanitized: SafeUrl) => {\n        this.qrCodeURL.emit(urlSanitized)\n      })\n      .catch((error) => {\n        console.error(\n          \"[angularx-qrcode] Error when fetching image/png URL: \" + error\n        )\n      })\n  }\n}\n","import { NgModule } from \"@angular/core\"\nimport { QRCodeComponent } from \"./angularx-qrcode.component\"\n\n@NgModule({\n  providers: [],\n  declarations: [QRCodeComponent],\n  exports: [QRCodeComponent],\n})\nexport class QRCodeModule {}\n"],"names":[],"mappings":"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"}